%define rpm_name     #RPM_NAME#
%define rpm_version  #RPM_VERSION#
%define rpm_release  #RPM_RELEASE#
%define rpm_packager #RPM_PACKAGER#

%define ruby_scl    rh-ruby22
%define ruby_pfx    %{ruby_scl}-
%define ruby_dir    /opt/rh/%{ruby_scl}/root

Name:           %{rpm_name}
Version:        %{rpm_version}
Release:        %{rpm_release}%{?dist}
Summary:        A flexible project management web application
Group:          Networking/WWW
License:        GPLv2+
URL:            http://www.redmine.org
Source0:        http://www.redmine.org/releases/#RPM_NAME#-#RPM_VERSION#.tar.gz
Source101:      %{rpm_name}-database.yml
Source102:      %{rpm_name}.logrotate
Source103:      %{rpm_name}.apache24
Requires:       webserver
Requires:       %{name}-db
Requires:       %{name}-gems

BuildArch:      noarch

%description
Redmine is a flexible project management web application. Written using
Ruby on Rails framework, it is cross-platform and cross-database.

Overview

 * Multiple projects support
 * Flexible role based access control
 * Flexible issue tracking system
 * Gantt chart and calendar
 * News, documents & files management
 * Feeds & email notifications
 * Per project wiki
 * Per project forums
 * Time tracking
 * Custom fields for issues, time-entries, projects and users
 * SCM integration (SVN, CVS, Git, Mercurial, Bazaar and Darcs)
 * Issue creation via email
 * Multiple LDAP authentication support
 * User self-registration support
 * Multilanguage support
 * Multiple databases support


#-------------------------------------------------------------------------------
%package pg
Summary:        A flexible project management web application - pgsql connector
Group:          Networking/WWW
#Requires:       %{ruby_pfx}rubygem-pg
Requires:       postgresql
Provides:       %{name}-pg = %{version}-%{release}
Provides:       %{name}-db = %{version}-%{release}

%description pg
Redmine is a flexible project management web application. Written using
Ruby on Rails framework, it is cross-platform and cross-database.

This package contains the needed modules to use postgresql as redmine's
database backend.


%files pg
#-------------------------------------------------------------------------------
%package mysql
Summary:        A flexible project management web application - mysql connector
Group:          Networking/WWW
#Requires:       %{ruby_pfx}rubygem-mysql2
Requires:       mariadb
Provides:       %{name}-mysql = %{version}-%{release}
Provides:       %{name}-db    = %{version}-%{release}

%description mysql
Redmine is a flexible project management web application. Written using
Ruby on Rails framework, it is cross-platform and cross-database.

This package contains the needed modules to use mysql as redmine's
database backend.


%files mysql
#-------------------------------------------------------------------------------
%package sqlite
Summary:        A flexible project management web application - sqlite connector
Group:          Networking/WWW
#Requires:       %{ruby_pfx}rubygem-sqlite3
Requires:       sqlite
Provides:       %{name}-sqlite = %{version}-%{release}
Provides:       %{name}-db     = %{version}-%{release}

%description sqlite
Redmine is a flexible project management web application. Written using
Ruby on Rails framework, it is cross-platform and cross-database.

This package contains the needed modules to use sqlite as redmine's
database backend.


%files sqlite
#-------------------------------------------------------------------------------
%package git
Summary:        A flexible project management web application - git backend
Group:          Networking/WWW
Requires:       git-core
Provides:       %{name}-git = %{version}-%{release}
Provides:       %{name}-scm = %{version}-%{release}

%description git
Redmine is a flexible project management web application. Written using
Ruby on Rails framework, it is cross-platform and cross-database.

This package contains the needed modules to use git as redmine's
version control system backend


%files git
#-------------------------------------------------------------------------------
%package svn
Summary:        A flexible project management web application - subversion backend
Group:          Networking/WWW
Requires:       subversion
Provides:       %{name}-svn = %{version}-%{release}
Provides:       %{name}-scm = %{version}-%{release}

%description svn
Redmine is a flexible project management web application. Written using
Ruby on Rails framework, it is cross-platform and cross-database.

This package contains the needed modules to use subversion as redmine's
version control system backend


%files svn
#-------------------------------------------------------------------------------
%package hg
Summary:        A flexible project management web application - mercurial backend
Group:          Networking/WWW
Requires:       mercurial
Provides:       %{name}-hg  = %{version}-%{release}
Provides:       %{name}-scm = %{version}-%{release}

%description hg
Redmine is a flexible project management web application. Written using
Ruby on Rails framework, it is cross-platform and cross-database.

This package contains the needed modules to use mercurial as redmine's
version control system backend


%files hg
#-------------------------------------------------------------------------------
%package bzr
Summary:        A flexible project management web application - bzr backend
Group:          Networking/WWW
Requires:       bzr
Provides:       %{name}-bzr = %{version}-%{release}
Provides:       %{name}-scm = %{version}-%{release}

%description bzr
Redmine is a flexible project management web application. Written using
Ruby on Rails framework, it is cross-platform and cross-database.

This package contains the needed modules to use bazaar as redmine's
version control system backend


%files bzr
#-------------------------------------------------------------------------------
%package cvs
Summary:        A flexible project management web application - cvs backend
Group:          Networking/WWW
Requires:       cvs
Provides:       %{name}-cvs = %{version}-%{release}
Provides:       %{name}-scm = %{version}-%{release}

%description cvs
Redmine is a flexible project management web application. Written using
Ruby on Rails framework, it is cross-platform and cross-database.

This package contains the needed modules to use cvs as redmine's
version control system backend


%files cvs
#-------------------------------------------------------------------------------


%prep
%setup -q -n %{rpm_name}-%{rpm_version}

# Remove the backup patch files as the install is done with cp *
rm -f *.00??

%build
find . -name ".gitignore" -exec rm {} \;
find . -name ".hgignore" -exec rm {} \;
rm -f appveyor.yml

%install
install -d %{buildroot}%{_var}/www/%{name}
%{__cp} -rf * %{buildroot}%{_var}/www/%{name}

# Don’t include bundle
rm -rf %{buildroot}%{_var}/www/%{name}/vendor

# Don't include some prebuilt binaries
rm -rf %{buildroot}%{_var}/www/%{name}/lib/plugins/rfpdf/lib/fonts/ttf2ufm

# Provide database.yml as it’s mandatory to run redmine
install -D -m644 %{SOURCE101} %{buildroot}%{_var}/www/%{name}/config/database.yml

# Add Logrotate script
mkdir -p %{buildroot}%{_sysconfdir}/logrotate.d/
install -D -m644 %{SOURCE102} %{buildroot}%{_sysconfdir}/logrotate.d/%{name}

# Add httpd default conf
mkdir -p %{buildroot}%{_sysconfdir}/httpd/conf.d/
install -D -m644 %{SOURCE103} %{buildroot}%{_sysconfdir}/httpd/conf.d/%{name}.conf


%post
pushd %{_var}/www/%{name} > /dev/null
# Prepare log file if required
LOG_FILE="log/production.log"
if [ -n "${LOG_FILE}" -a ! -f "${LOG_FILE}" ]; then
  touch "${LOG_FILE}"
  chown nobody:nobody "${LOG_FILE}"
  chmod 0644 "${LOG_FILE}"
fi

# No clue why it is needed to unfroze - main post script won't find any gem otherwise!
scl enable %{ruby_scl} -- bundle config --local frozen 0 > /dev/null
scl enable %{ruby_scl} -- bundle show > /dev/null
scl enable %{ruby_scl} -- bundle config --local frozen 1 > /dev/null

# Generate secret token if required
if [ ! -f "config/initializers/secret_token.rb" ]; then
  echo -n 'Running generate_secret_token task... '
  RAILS_ENV=production scl enable %{ruby_scl} -- bundle exec rake generate_secret_token
  if [ ${?} -eq 0 ]; then
    echo 'ok'
  else
    echo "error (check logs in $(pwd/log))"
  fi
fi
# Should we manage default db and/or schema upgrade from here?
DB_FILE="db/redmine.sqlite3"
if [ -n "${DB_FILE}" -a ! -f "${DB_FILE}" ]; then
  touch "${DB_FILE}"
  chown nobody:nobody "${DB_FILE}"
  chmod 0644 "${DB_FILE}"
fi
echo -n 'Running db:migrate task... '
RAILS_ENV=production scl enable %{ruby_scl} -- bundle exec rake db:migrate > /dev/null 2>&1
if [ ${?} -eq 0 ]; then
  echo 'ok'
else
  echo "error (check logs in $(pwd/log))"
fi
popd > /dev/null


%files
%{_sysconfdir}/logrotate.d/%{name}
%config(noreplace) %{_sysconfdir}/httpd/conf.d/%{name}.conf
%config(noreplace) %{_var}/www/%{name}/config/database.yml
%doc %{_var}/www/%{name}/README.rdoc
%doc %{_var}/www/%{name}/CONTRIBUTING.md
%dir %{_var}/www/%{name}/
%{_var}/www/%{name}/app/
%dir %{_var}/www/%{name}/config/
%doc %{_var}/www/%{name}/config/*.example
%{_var}/www/%{name}/config/environments/
%{_var}/www/%{name}/config/locales/
%{_var}/www/%{name}/config/initializers/
%{_var}/www/%{name}/config/routes.rb
%{_var}/www/%{name}/config/boot.rb
%{_var}/www/%{name}/config/environment.rb
%{_var}/www/%{name}/config/settings.yml
%attr(0755,nobody,nobody) %{_var}/www/%{name}/db/
%{_var}/www/%{name}/doc/
%{_var}/www/%{name}/extra/
# Directory has to be owned by the user under which the webserver runs
# Since apache is the preferred webserver for many people simplify the
# process for those users, but it sucks, all webservers should belong
# to the same user :-(
%attr(0755,nobody,nobody) %{_var}/www/%{name}/files/
%{_var}/www/%{name}/lib/
%attr(0755,nobody,nobody) %{_var}/www/%{name}/log/
%{_var}/www/%{name}/public/
%{_var}/www/%{name}/Rakefile
%{_var}/www/%{name}/test/
%attr(0755,nobody,nobody) %{_var}/www/%{name}/tmp/
#%{_var}/www/%{name}/vendor/
%{_var}/www/%{name}/Gemfile*
%{_var}/www/%{name}/config.ru
%{_var}/www/%{name}/config/application.rb
#{_var}/www/%{name}/config/preinitializer.rb
%{_var}/www/%{name}/plugins/README
%{_var}/www/%{name}/bin/

%changelog
%include %{_specdir}/changelog
